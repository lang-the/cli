name: Deploy Packages

on:
  workflow_dispatch:
  push:
    paths: [".github/workflows/deploy-packages.yml"]

jobs:
  deploy-msvc-packages:
    runs-on: windows-2022
    steps:
      - run: choco install nasm
      - run: echo "C:/Program Files/NASM" | Out-File -FilePath $env:GITHUB_PATH -Append
      - run: echo "INSTALL_DIR=$PWD/the/windows/x86_64-msvc" | Out-File -FilePath $env:GITHUB_ENV -Append
      - run: git clone --depth 1 --branch openssl-3.0.7 https://github.com/openssl/openssl.git $env:INSTALL_DIR/openssl-src
      - run: (cd $env:INSTALL_DIR/openssl-src && perl Configure VC-WIN64A no-dso no-shared no-tests no-threads --libdir=lib --prefix=$env:INSTALL_DIR)
      - run: perl $env:INSTALL_DIR/openssl-src/configdata.pm --dump
      - run: (cd $env:INSTALL_DIR/openssl-src && nmake)
      - run: (cd $env:INSTALL_DIR/openssl-src && nmake install_sw)
      - run: rm -rf $env:INSTALL_DIR/openssl-src
      - run: tar -czf packages-msvc.tar.gz the
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: aws s3 cp packages-msvc.tar.gz s3://${{ secrets.AWS_S3_BUCKET }}/packages-msvc.tar.gz --content-type application/x-gzip --content-disposition "attachment; filename=packages-msvc.tar.gz"
      - run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION }} --paths "/packages-msvc.tar.gz"
  deploy-packages:
    needs: deploy-msvc-packages
    runs-on: ubuntu-22.04
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install build-essential clang cmake libssl-dev libxml2-dev llvm-dev lzma-dev mingw-w64
      - run: curl -fsSL https://cdn.thelang.io/packages-msvc.tar.gz | tar -xz
      - run: echo "INSTALL_DIR=$PWD/the/osxcross" >> $GITHUB_ENV
      - run: |
          git clone https://github.com/tpoechtrager/osxcross.git $INSTALL_DIR/osxcross-src
          (cd $INSTALL_DIR/osxcross-src && git reset --hard 50e86ebca7d14372febd0af8cd098705049161b9)
          curl -fsSL https://cdn.thelang.io/MacOSX12.3.sdk.tar.xz -o $INSTALL_DIR/osxcross-src/tarballs/MacOSX12.3.sdk.tar.xz
          TARGET_DIR=$INSTALL_DIR UNATTENDED=1 $INSTALL_DIR/osxcross-src/build.sh
          rm -rf $INSTALL_DIR/osxcross-src
      - run: echo "$INSTALL_DIR/bin" >> $GITHUB_PATH
      - run: echo "OPENSSL_ARGS=no-dso no-shared no-tests no-threads --libdir=lib" >> $GITHUB_ENV
      - run: echo "INSTALL_DIR=$PWD/the/linux" >> $GITHUB_ENV
      - run: |
          git clone --depth 1 --branch openssl-3.0.7 https://github.com/openssl/openssl.git $INSTALL_DIR/openssl-src
          (cd $INSTALL_DIR/openssl-src && CC=clang perl Configure $OPENSSL_ARGS --prefix=$INSTALL_DIR)
          perl $INSTALL_DIR/openssl-src/configdata.pm --dump
          make -C $INSTALL_DIR/openssl-src -j4
          make install_sw -C $INSTALL_DIR/openssl-src
          rm -rf $INSTALL_DIR/openssl-src
      - run: echo "INSTALL_DIR=$PWD/the/macos" >> $GITHUB_ENV
      - run: |
          git clone --depth 1 --branch openssl-3.0.7 https://github.com/openssl/openssl.git $INSTALL_DIR/openssl-src
          (cd $INSTALL_DIR/openssl-src && CC=clang perl Configure darwin64-x86_64 $OPENSSL_ARGS --cross-compile-prefix=x86_64-apple-darwin21.4- --prefix=$INSTALL_DIR)
          perl $INSTALL_DIR/openssl-src/configdata.pm --dump
          make -C $INSTALL_DIR/openssl-src -j4
          make install_sw -C $INSTALL_DIR/openssl-src
          rm -rf $INSTALL_DIR/openssl-src
      - run: echo "INSTALL_DIR=$PWD/the/windows/x86_64-mingw" >> $GITHUB_ENV
      - run: |
          git clone --depth 1 --branch openssl-3.0.7 https://github.com/openssl/openssl.git $INSTALL_DIR/openssl-src
          (cd $INSTALL_DIR/openssl-src && perl Configure mingw64 $OPENSSL_ARGS --cross-compile-prefix=x86_64-w64-mingw32- --prefix=$INSTALL_DIR)
          perl $INSTALL_DIR/openssl-src/configdata.pm --dump
          make -C $INSTALL_DIR/openssl-src -j4
          make install_sw -C $INSTALL_DIR/openssl-src
          rm -rf $INSTALL_DIR/openssl-src
      - run: tar -czf packages.tar.gz the
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: aws s3 cp packages.tar.gz s3://${{ secrets.AWS_S3_BUCKET }}/packages.tar.gz --content-type application/x-gzip --content-disposition "attachment; filename=packages.tar.gz"
      - run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION }} --paths "/packages.tar.gz"
