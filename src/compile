/*!
 * Copyright (c) Aaron Delasy
 * Licensed under the MIT License
 */

import zip from "the/zip"

export fn request (url: str, path: str) buffer_Buffer {
  archivePath := path + path_SEP + "file.zip"
  zip(archivePath, "*", cwd: path)
  data := fs_readFileSync(archivePath)

  headers := [
    request_Header{name: "authorization", value: "pELerETRaVeYHEne"},
    request_Header{name: "content-type", value: "application/zip"}
  ]

  mut req := request_open("POST", url, headers: headers, data: data)
  res := req.read()
  req.close()

  fs_rmSync(archivePath)

  if res.status != 200 {
    print(res.data.str(), to: "stderr")
    process_exit(1)
  }

  return res.data
}

export fn customCompile (compiler: str, action: str, filePath: str, outputPath: str) buffer_Buffer {
  isCompile := action == "compile"
  actionArg := isCompile ? "" : " " + action
  optionArg := " --output='" + outputPath + "'"
  stdout := process_runSync(compiler + actionArg + optionArg + " " + filePath)

  return stdout
}
